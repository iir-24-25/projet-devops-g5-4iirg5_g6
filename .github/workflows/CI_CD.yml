name: CI/CD - Full Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Build & Test
  build-and-test-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: "no"
          MYSQL_DATABASE: devoir_db
          MYSQL_ROOT_HOST: '%'
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10
    defaults:
      run:
        working-directory: ./Backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build backend
        run: mvn clean install -DskipTests

      - name: Run backend tests
        run: mvn test

  # Docker Build (Backend & Frontend)
  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [build-and-test-backend]
    steps:
      - uses: actions/checkout@v3

      # Build Backend Docker image
      - name: Build backend Docker image
        run: docker build -t myapp-backend:latest ./Backend

      # Build Frontend Docker image
      - name: Build frontend Docker image
        run: docker build -t myapp-frontend:latest ./frontend

  # Deploy to Production
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v3

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      # Deploy using Docker Compose
      - name: Deploy using Docker Compose
        run: docker-compose -f docker-compose.prod.yml up -d

      # Print deployment status
      - name: Print deployment status
        run: docker ps
